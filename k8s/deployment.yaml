# Kubernetes deployment configuration for Context Memory Gateway
# This file defines the production deployment setup

apiVersion: v1
kind: Namespace
metadata:
  name: context-memory-gateway
  labels:
    app: context-memory-gateway
    environment: production

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: cmg-config
  namespace: context-memory-gateway
data:
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  SERVER_HOST: "0.0.0.0"
  SERVER_PORT: "8000"
  METRICS_ENABLED: "true"
  RATE_LIMIT_REQUESTS: "1000"
  RATE_LIMIT_WINDOW: "60"
  DEFAULT_TOKEN_BUDGET: "8000"
  MAX_CONTEXT_ITEMS: "50"
  WORKER_PROCESSES: "4"
  JOB_TIMEOUT: "300"
  MODEL_SYNC_INTERVAL_HOURS: "24"
  MODEL_DEPRECATION_DAYS: "30"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: cmg-secrets
  namespace: context-memory-gateway
type: Opaque
data:
  # These should be base64 encoded
  SECRET_KEY: <BASE64_ENCODED_SECRET_KEY>
  DATABASE_URL: <BASE64_ENCODED_DATABASE_URL>
  REDIS_URL: <BASE64_ENCODED_REDIS_URL>
  OPENROUTER_API_KEY: <BASE64_ENCODED_OPENROUTER_KEY>
  QDRANT_URL: <BASE64_ENCODED_QDRANT_URL>
  SENTRY_DSN: <BASE64_ENCODED_SENTRY_DSN>

---
# Main application deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: context-memory-gateway
  namespace: context-memory-gateway
  labels:
    app: context-memory-gateway
    component: api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: context-memory-gateway
      component: api
  template:
    metadata:
      labels:
        app: context-memory-gateway
        component: api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: context-memory-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: ghcr.io/your-org/context-memory-gateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: cmg-config
        - secretRef:
            name: cmg-secrets
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/detailed
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}

---
# Worker deployment for background tasks
apiVersion: apps/v1
kind: Deployment
metadata:
  name: context-memory-gateway-worker
  namespace: context-memory-gateway
  labels:
    app: context-memory-gateway
    component: worker
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: context-memory-gateway
      component: worker
  template:
    metadata:
      labels:
        app: context-memory-gateway
        component: worker
        version: v1
    spec:
      serviceAccountName: context-memory-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: ghcr.io/your-org/context-memory-gateway:latest
        imagePullPolicy: Always
        command: ["python", "-m", "rq.worker"]
        args: ["--url", "$(REDIS_URL)", "default", "high", "low"]
        envFrom:
        - configMapRef:
            name: cmg-config
        - secretRef:
            name: cmg-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: context-memory-gateway
  namespace: context-memory-gateway
  labels:
    app: context-memory-gateway

---
# Service for API
apiVersion: v1
kind: Service
metadata:
  name: context-memory-gateway-api
  namespace: context-memory-gateway
  labels:
    app: context-memory-gateway
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: context-memory-gateway
    component: api

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: context-memory-gateway-hpa
  namespace: context-memory-gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: context-memory-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: context-memory-gateway-pdb
  namespace: context-memory-gateway
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: context-memory-gateway
      component: api

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: context-memory-gateway-netpol
  namespace: context-memory-gateway
spec:
  podSelector:
    matchLabels:
      app: context-memory-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: redis
    ports:
    - protocol: TCP
      port: 6379